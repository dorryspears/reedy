name: Publish to crates.io

on:
  push:
    tags: [ 'v*' ]

jobs:
  publish:
    name: Publish
    # Only run this job when we're on the main branch AND have a tag
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags
      
      - name: Check if on main branch
        id: check_branch
        run: |
          # Get the branch that the tag is on
          TAG_BRANCH=$(git branch -r --contains ${{ github.ref }} | grep -v "HEAD" | head -n 1 | xargs)
          echo "Tag is on branch: $TAG_BRANCH"
          
          # Only proceed if the tag is on main
          if [[ "$TAG_BRANCH" == *"main" ]]; then
            echo "tag_on_main=true" >> $GITHUB_OUTPUT
          else
            echo "tag_on_main=false" >> $GITHUB_OUTPUT
            echo "Tag is not on main branch, skipping publish"
          fi

      - name: Install stable toolchain
        if: steps.check_branch.outputs.tag_on_main == 'true'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install dependencies
        if: steps.check_branch.outputs.tag_on_main == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Run CI preparation
        if: steps.check_branch.outputs.tag_on_main == 'true'
        run: |
          chmod +x scripts/ci-prep.sh
          ./scripts/ci-prep.sh
          
      - name: Run tests
        if: steps.check_branch.outputs.tag_on_main == 'true'
        run: cargo test --all

      - name: Build release binary
        if: steps.check_branch.outputs.tag_on_main == 'true'
        run: cargo build --release

      - name: Publish
        if: steps.check_branch.outputs.tag_on_main == 'true'
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
          args: --allow-dirty
          
      - name: Create release
        if: steps.check_branch.outputs.tag_on_main == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/reedy
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 